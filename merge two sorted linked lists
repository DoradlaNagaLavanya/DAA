/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include <stdlib.h>
struct node{
struct node*next;
int data;
};
struct node *createnode(int data)
{
struct node*temp;
struct node*newn=(struct node*)malloc(sizeof(struct node));
newn->data=data;
newn->next=NULL;
return newn;
}
struct node*create()
{
struct node*head=NULL;
struct node *temp=head;
int i,n,data;
printf("enter no of nodes");
scanf("%d",&n);

struct node*newn=NULL;
for(i=0;i<n;i++)
{
    printf("enter data");
scanf("%d",&data);
newn=createnode(data);
if(i==0)
{
head=newn;
temp=newn;
}
temp->next=newn;
temp=newn;
}
return head;
}
void display(struct node*head)
{

struct node *temp=head;
while(temp!=NULL)
{
printf("%d\t",temp->data);
temp=temp->next;
}
}
struct node*insert(struct node*head)
{
    int n;
    printf("enter no of nodes");
    scanf("%d",&n);
    struct node*newn=NULL;
    struct node*temp=head;
    int i,pos,data;
    printf("enter pos to insert");
    scanf("%d",&pos);
    //printf("enter data to insert");
    //scanf("%d",&data);
    newn=createnode(data);

        if(pos==0)
        {
            if(head==NULL)
            {
                head=newn;
            }
            newn->next=head;
            head=newn;
        }
        else if(pos>0 && pos<n)
        {
                for(i=0;i<pos-1;i++)
                {
                    temp=temp->next;
                }
               // temp->next=newn;
                newn->next=temp->next;
                temp->next=newn;
        }
        else if(pos==n)
        {
            //struct node*temp=head;
            while(temp->next!=NULL)
            {
                temp=temp->next;
            }
            temp->next=newn;
            //newn->next=NULL;
        }
        return head;
}

struct node*merge(struct node*h1,struct node*h2)
{
    struct node*result;
    if(h1==NULL)
    return h2;
    if(h2==NULL)
    return h1;
    if(h1->data<h2->data)
        {
            result=h1;
            result->next=merge(h1->next,h2);
        }
       else if(h1->data==h2->data)
        {
            result=h1;
            result->next=merge(h1->next,h2->next);
        }
         else
        {
            result=h2;
            result->next=merge(h1,h2->next);
        }
        return result;
}
           

void main()
{
struct node*h1=NULL;
struct node*h2=NULL;
struct node*h3=NULL;
h1=create();
h2=create();
h3=merge(h1,h2);
display(h3);

}


